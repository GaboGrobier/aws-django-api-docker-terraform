name: publish ec2 with api

on:
  workflow_run:
    workflows: ["repository_scan"]
    types:
      - completed

jobs:
  building_ec2_and_publish_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download terraform.tfstate from S3
        run: |
          aws s3 cp s3://bkt-tf-tfstate-gabogrobier-desafiolatam/pruebafinal/desafiolatam/terraform.tfstate ./terraform.tfstate
          echo "Terraform state file downloaded."

      - name: Extract EC2 public IP from terraform.tfstate
        run: |
          PUBLIC_IP=$(jq -r '.resources[] | select(.type=="aws_instance") | .instances[] | .attributes.public_ip' terraform.tfstate)
          echo "PUBLIC_IP=${PUBLIC_IP}" >> $GITHUB_ENV
          echo "Public IP: $PUBLIC_IP"

      - name: Show public IP
        run: |
          echo "The public IP of the instance is: ${{ env.PUBLIC_IP }}"

  deploy_api_to_ec2:
    runs-on: ubuntu-latest
    needs: building_ec2_and_publish_api
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PASSWORD_SERVER }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa        

      - name: Copy files to server
        run: |
          rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./repositorios/api ${{ secrets.USER_SERVER }}@${{ env.PUBLIC_IP }}:/home/ubuntu/web/

      - name: pausa para esperar termino de instalacion Docker y docker-compose
        run: sleep 35

      - name: SSH commands to deploy
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{secrets.USER_SERVER}}@${{ env.PUBLIC_IP }} << 'EOF'
          cd /home/ubuntu/web/
          docker-compose down
          docker-compose up -d --build
          EOF
