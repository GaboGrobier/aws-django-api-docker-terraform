name: publish ec2 with api

on:
  workflow_run:
    workflows: ["repository_scan"]
    types:
      - completed

jobs:
  building_ec2_and_publish_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.3

      - name: Building ecr repository
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd terraform/build_ec2
          terraform init
          terraform apply -auto-approve


  deploy_api_to_ec2:
    runs-on: ubuntu-latest
    needs: building_ec2_and_publish_api
    steps:

      - name: Checkout code
        uses: actions/checkout@v2



      - name: Obtener dirección IP pública
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          export PUBLIC_IP=$(aws ec2 describe-instances --region $AWS_REGION --filters "Name=tag:Name,Values=server_prueba_dflatam" \
          --query "Reservations[].Instances[].PublicIpAddress" --output text)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
        
  
      - name: mirar ip publica
        run: |
          echo "Using IP_PUBLICA: ${{ env.PUBLIC_IP }}"

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PASSWORD_SERVER }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa        

      - name: Copy files to server
        run: |
          rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./repositorios/api ${{ secrets.USER_SERVER }}@${{ env.PUBLIC_IP }}:/home/ubuntu/web/

      - name: pausa para esperar termino de instalacion Docker y docker-compose
        run: sleep 35

      - name: SSH commands to deploy
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{secrets.USER_SERVER}}@${{ env.PUBLIC_IP }} << 'EOF'
          cd /home/ubuntu/web/
          docker-compose down
          docker-compose up -d --build
          EOF
