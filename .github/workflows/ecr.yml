name: build and publis registry and image

on:
  workflow_run:
    workflows: ["repository_scan"]
    types:
      - completed

jobs:
  building_ecr_and_publish_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.3

      - name: Building ecr repository
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd terraform/ecr_tf
          terraform init
          terraform refresh
          terraform apply -auto-approve


  build_docker_and_push_images:
    runs-on: ubuntu-latest
    needs: building_ecr_and_publish_image
    steps:

        - name: checkout code
          uses: actions/checkout@v2

        - name: Configurar credenciales de AWS
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

          
        - name: Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
            ECR_REPOSITORY: ecr_web_sencilla  # Nombre del repositorio en ECR
            NAME_IMAGE: web_sencilla          # Nombre de la imagen local
            IMAGE_TAG: ${{ github.sha }}      # Etiqueta de la imagen
          run: |
            cd repositorios/web
            docker build -t $NAME_IMAGE:${IMAGE_TAG} .
            docker tag $NAME_IMAGE:${IMAGE_TAG} $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
            echo "image=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_ENV
            docker images
        
      
        - name: Install Snyk CLI
          run: npm install -g snyk
          
        - name: Authenticate Snyk CLI
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          run: snyk auth $SNYK_TOKEN
          
        - name: Scan local Docker image
          run: snyk container test $NAME_IMAGE:${IMAGE_TAG}
          
        - name: Scan image in Amazon ECR repository
          run: snyk container test $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
          